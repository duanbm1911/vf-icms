# Generated by Django 5.2 on 2025-05-17 16:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckpointPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy', models.CharField(max_length=200, unique=True)),
                ('layer', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CheckpointSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(max_length=100, unique=True)),
                ('smc', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='F5Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f5_device_ip', models.CharField(max_length=200)),
                ('f5_device_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='F5PoolMemberMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_method', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='F5Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=200, unique=True)),
                ('partition', models.CharField(blank=True, max_length=200)),
                ('protocol', models.CharField(blank=True, max_length=200)),
                ('client_protocol_profile', models.CharField(blank=True, max_length=200)),
                ('server_protocol_profile', models.CharField(blank=True, max_length=200)),
                ('client_http_profile', models.CharField(blank=True, max_length=200)),
                ('server_http_profile', models.CharField(blank=True, max_length=200)),
                ('snat_name', models.CharField(blank=True, max_length=200)),
                ('http_analytics_profile', models.CharField(blank=True, max_length=200)),
                ('tcp_analytics_profile', models.CharField(blank=True, max_length=200)),
                ('web_socket_profile', models.CharField(blank=True, max_length=200)),
                ('http_compression_profile', models.CharField(blank=True, max_length=200)),
                ('web_acceleration_profile', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FMCDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=500, unique=True)),
                ('domain_id', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='FMCSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(max_length=100, unique=True)),
                ('fmc', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CheckpointRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=1000)),
                ('source', models.CharField(max_length=1000)),
                ('destination', models.CharField(max_length=1000)),
                ('protocol', models.CharField(max_length=1000)),
                ('schedule', models.CharField(blank=True, max_length=1000)),
                ('section', models.CharField(blank=True, max_length=100)),
                ('user_created', models.CharField(max_length=200)),
                ('time_created', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='Created', max_length=200)),
                ('message', models.CharField(blank=True, max_length=3000, null=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.checkpointpolicy')),
            ],
        ),
        migrations.CreateModel(
            name='CheckpointRuleSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(blank=True, max_length=100)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.checkpointpolicy')),
            ],
        ),
        migrations.AddField(
            model_name='checkpointpolicy',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.checkpointsite'),
        ),
        migrations.CreateModel(
            name='CheckpointGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway', models.CharField(max_length=500, unique=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.checkpointsite')),
            ],
        ),
        migrations.CreateModel(
            name='F5ClientSSLProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5device')),
            ],
        ),
        migrations.CreateModel(
            name='F5Irule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('irule_name', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5device')),
            ],
        ),
        migrations.CreateModel(
            name='F5LimitConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vs_name', models.CharField(max_length=200)),
                ('connection_number', models.IntegerField()),
                ('status', models.CharField(default='Created', max_length=200)),
                ('message', models.CharField(blank=True, max_length=1000)),
                ('task_name', models.CharField(default='create-limit-connection', max_length=200)),
                ('tag', models.CharField(default='badge-danger', max_length=200)),
                ('time_created', models.DateTimeField(auto_now=True)),
                ('user_created', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.f5device')),
            ],
        ),
        migrations.CreateModel(
            name='F5PoolMemberMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_monitor', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5device')),
            ],
        ),
        migrations.CreateModel(
            name='F5ServerSSLProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5device')),
            ],
        ),
        migrations.CreateModel(
            name='F5CreateVirtualServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=200)),
                ('vs_name', models.CharField(max_length=200)),
                ('vs_ip', models.GenericIPAddressField()),
                ('vs_port', models.IntegerField()),
                ('pool_name', models.CharField(max_length=200)),
                ('pool_member', models.CharField(max_length=1000)),
                ('pool_monitor', models.CharField(max_length=200)),
                ('pool_lb_method', models.CharField(max_length=200)),
                ('client_ssl_profile', models.CharField(blank=True, max_length=200)),
                ('server_ssl_profile', models.CharField(blank=True, max_length=200)),
                ('irules', models.CharField(blank=True, max_length=200)),
                ('waf_profile', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(blank=True, max_length=200)),
                ('message', models.CharField(blank=True, max_length=1000)),
                ('task_name', models.CharField(default='create-virtual-server', max_length=200)),
                ('tag', models.CharField(default='badge-warning', max_length=200)),
                ('time_created', models.DateTimeField(auto_now=True)),
                ('user_created', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5device')),
                ('f5_template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5template')),
            ],
        ),
        migrations.CreateModel(
            name='F5VirtualServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vs_ip', models.GenericIPAddressField()),
                ('vs_port', models.IntegerField()),
                ('vs_name', models.CharField(max_length=200)),
                ('service_dns_name', models.CharField(blank=True, max_length=200, null=True)),
                ('client_ssl_profile', models.CharField(blank=True, max_length=200, null=True)),
                ('server_ssl_profile', models.CharField(blank=True, max_length=200, null=True)),
                ('service_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('center_head', models.CharField(blank=True, max_length=200, null=True)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.f5device')),
                ('group_permission', models.ManyToManyField(to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='F5WafProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waf_profile', models.CharField(max_length=200)),
                ('f5_device_ip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cm.f5device')),
            ],
        ),
        migrations.CreateModel(
            name='FMCGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway', models.CharField(max_length=500, unique=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.fmcdomain')),
            ],
        ),
        migrations.CreateModel(
            name='FMCPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy', models.CharField(max_length=200, unique=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.fmcgateway')),
            ],
        ),
        migrations.CreateModel(
            name='FMCRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=1000)),
                ('source', models.CharField(max_length=1000)),
                ('destination', models.CharField(max_length=1000)),
                ('protocol', models.CharField(max_length=1000)),
                ('schedule', models.CharField(blank=True, max_length=1000)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('user_created', models.CharField(max_length=200)),
                ('time_created', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='Created', max_length=200)),
                ('message', models.CharField(blank=True, max_length=3000, null=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.fmcpolicy')),
            ],
        ),
        migrations.CreateModel(
            name='FMCRuleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.fmcpolicy')),
            ],
        ),
        migrations.AddField(
            model_name='fmcdomain',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cm.fmcsite'),
        ),
    ]
